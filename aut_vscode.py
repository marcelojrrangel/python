# -*- coding: utf-8 -*-

import time
import subprocess
import sys
import random

from lib import LibClass

caminho_pasta = r"C:\TMP\auto"
titulo_janela = 'Visual Studio Code'
janela_salvar = 'Save As'

lib = LibClass(titulo_janela)


def main():
    if len(sys.argv) <= 0:
        print("Sem parâmetros")
        sys.exit(1)

    lib.clear_folder(caminho_pasta)

    vezes = 1
    if (len(sys.argv) > 1 and sys.argv[1] is not None):
        vezes = int(sys.argv[1])

    for i in range(vezes):
        nome = f"auto{i}.cs"
        processar(nome)
        print(f"Processando {i} de {vezes} - arquivo {nome}")
        time.sleep(50)

    print("Fim")


def sortear_arquivo(lista_arquivos):
    indice = random.randint(0, len(lista_arquivos)-1)
    return lista_arquivos[indice]

def obtem_arquivo():
    sortear = 1
    print("Procurando arquivos")
    #C:\projetos\run\BMG.Digital.Onboarding.AdesaoPlanoBeneficio\src\BMG.Digital.Onboarding.AdesaoPlanoBeneficio.Queue
    #C:\projetos\run\BMG.Digital.FormalizacaoIntegracaoEcontent_2023\BMG.Digital.FormalizacaoIntegracaoEcontent
    lista_arquivos = lib.encontar_arquivos(pasta_inicial=
                                           r"C:\projetos\run",
                                           padrao="*.cs")
    arquivo_programa = None
    while True:
        print(f"Sorteando arquivo qtd: {sortear}")
        arquivo_programa = sortear_arquivo(lista_arquivos)
        existe_string = lib.verificar_string_no_arquivo(arquivo_programa, ['auto-generated','autogenerated'])
        if not existe_string:
            break
        sortear += 1
    print("Arquivo encontrado")
    return lib.obter_leitura_arquivo(arquivo_programa)

def processar(nome_do_arquivo):
    # print("Procurando arquivos")
    # lista_arquivos = lib.encontar_arquivos(pasta_inicial=
    #     r"C:\projetos\run\BMG.Digital.FormalizacaoIntegracaoEcontent_2023\BMG.Digital.FormalizacaoIntegracaoEcontent", padrao="*.cs")
    # #arquivo_programa = r"C:\projetos\run\BMG.Digital.FormalizacaoIntegracaoEcontent_2023\BMG.Digital.FormalizacaoIntegracaoEcontent\Services\ClienteService.cs"
    # print("Sorteando arquivo")
    # arquivo_programa = sortear_arquivo(lista_arquivos)
    # print("Lendo arquivo")
    # arquivo_leitura = lib.obter_leitura_arquivo(arquivo_programa)
    #texto = "Este é um exemplo de texto escrito pelo programa em Python.\n"
    arquivo_leitura = obtem_arquivo()
    subprocess.Popen([r"C:\Program Files\Microsoft VS Code\Code.exe"])
    time.sleep(15)
    lib.envia_comando(comando=('ctrl', 'k', 'w'))
    time.sleep(3)
    lib.envia_comando(hotkey=('ctrl', 'n'))
    time.sleep(3)
    #for i in range(10):
    #lib.envia_comando(texto=texto)
    if arquivo_leitura:
        while not arquivo_leitura.closed:
            with arquivo_leitura:
                for line in arquivo_leitura:
                    if line:
                        lib.envia_comando(texto=f"{line.strip()}\n")
                        time.sleep(random.randint(1, 5))
    time.sleep(2)
    lib.envia_comando(comando=('ctrl', 's'))
    time.sleep(3)
    lib.save_as(p_titulo_janela=janela_salvar, texto=f"{caminho_pasta}\\{nome_do_arquivo}")
    time.sleep(2)
    lib.envia_comando(press='enter')
    lib.save_as(p_titulo_janela=janela_salvar, press='enter')
    time.sleep(2)
    lib.envia_comando(hotkey=('alt', 'f4'))

def digitar(linha: str):
    palavras_array = linha.split(' ') #list(linha)
    for palavra in palavras_array:
        if not palavra.endswith("\n"):
            lib.envia_comando(texto=f"{palavra} ")
        else:
            lib.envia_comando(texto=f"{palavra}")

if __name__ == "__main__":
    main()
